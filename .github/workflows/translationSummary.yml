name: Run translationSummary from comment

on:
  issue_comment:
    types: [created]

jobs:
  comment-in-pr:

    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write

    steps:

      - name: üîç Get PR informations
        uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const prNumber = context.payload.issue.number;
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
            });

            console.log(`Repo: ${pr.head.repo.full_name}`);
            console.log(`Ref: ${pr.head.ref}`);

            return {
              owner: pr.head.repo.owner.login,
              repo: pr.head.repo.name,
              ref: pr.head.ref,
            };

      - name: üõé Checkout the PR branch
        uses: actions/checkout@v4
        with:
          repository: ${{ fromJson(steps.pr.outputs.result).owner }}/${{ fromJson(steps.pr.outputs.result).repo }}
          ref: ${{ fromJson(steps.pr.outputs.result).ref }}
          fetch-depth: 0

      - name: üèóÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: üì¶ Install TypeScript & tsx
        run: npm install -g typescript tsx

      - name: üì• Checkout main branch (dans ./main)
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: üöÄ Process command on PR comment
        uses: actions/github-script@v6
        with:
          script: |
            if (!context.payload.issue.pull_request) {
              console.log("Not a PR comment.");
              return ;
            }
            const commentBody = context.payload.comment.body;
            const actor = context.actor;
            const commandPrefix = "/trSum ";

            if (!commentBody.startsWith(commandPrefix)) {
              console.log("Not a valid command.");
              return;
            }

            const translation = commentBody.substring(commandPrefix.length).trim();

            if (actor !== "wneel") {
              console.log(`Non authorized user: ${actor}.`);
              return;
            }

            const { execSync } = require("child_process");
            const comment = execSync(`npx tsx ./main/commands/translationSummary.ts ${translation}`).toString().trim();

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment,
            });
            console.log("Command executed successfully !");
